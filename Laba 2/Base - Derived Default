#include <iostream>
using namespace std;

class Base
{
private:
  int base;
public:
Base(){};
Base(int b):base(b){};
virtual void Show()
{
  cout<<base<<endl;
}
};

class Derived:public Base
{
private:
  int derived;
public:
Deriver():Base(){};
Base(int b, int derived):base(b),derived(d){{};
virtual void Show()
{
  cout<<base<<endl;
}
};

int main()
{
  Base base(1);
  Derived derived(1, 10);

  Base *ptr_base = &base;
  Derived *ptr_der = &derived;

  cout<<ptr_base->Show();
  cout<<ptr_der->Show();

  return 0;
}
